buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["SmileId_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
//  uncomment for development to test snapshots
//  maven {
//    url = 'https://central.sonatype.com/repository/maven-snapshots/'
//  }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:8.10.1"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    if (kotlin_version?.startsWith("2")) {
      classpath "org.jetbrains.kotlin:compose-compiler-gradle-plugin:$kotlin_version"
    }
    classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    classpath "org.jlleitschuh.gradle:ktlint-gradle:12.3.0"
  }
}


// Auto-detect Expo projects
def isExpoProject = false
try {
  // Check if expo-modules-core exists
  isExpoProject = project.findProject(':expo-modules-core') != null
} catch (Exception e) {
  // Ignore errors
}

// Allow manual override via rootProject.ext or gradle.properties
def useExpo = rootProject.ext.has("useSmileIDExpo") ? rootProject.ext.get("useSmileIDExpo") :
  (isExpoProject || (project.properties["SmileId_useExpo"] == "true"))

// Apply the appropriate build configuration based on useExpo flag
if (useExpo) {
  println "SmileID: Using Expo build configuration"
  apply from: file("expoBuild.gradle")
} else {
  println "SmileID: Using React Native build configuration"
  apply from: file("reactBuild.gradle")
}

repositories {
  mavenCentral()
  google()
  gradlePluginPortal()
//  uncomment for development to test snapshots
//  maven {
//    url = 'https://central.sonatype.com/repository/maven-snapshots/'
//  }
}

def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["SmileId_kotlinVersion"]
def smile_id_sdk_version = rootProject.ext.has("smileIdAndroidSdkVersion") ? rootProject.ext.get("smileIdAndroidSdkVersion") : project.properties["SmileId_androidVersion"]

dependencies {
  if(useExpo){
    implementation project(':expo-modules-core')
  }
  implementation "com.facebook.react:react-native:0.72"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"
  implementation "com.smileidentity:android-sdk:$smile_id_sdk_version"
  implementation "com.google.mlkit:object-detection:17.0.2"
  implementation "com.jakewharton.timber:timber"
  implementation 'androidx.appcompat:appcompat:1.7.1'
  implementation("androidx.navigation:navigation-compose:2.9.0")
  implementation("androidx.lifecycle:lifecycle-runtime-compose:2.9.1")
  implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.1")
  implementation("androidx.compose.runtime:runtime:1.8.2")

  testImplementation 'junit:junit:4.13.2'

  androidTestImplementation 'androidx.test.ext:junit:1.2.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
  androidTestImplementation platform('androidx.compose:compose-bom:2025.06.00')
  androidTestImplementation 'androidx.compose.ui:ui-test-junit4'

  debugImplementation 'androidx.compose.ui:ui-tooling'
  debugImplementation 'androidx.compose.ui:ui-test-manifest'
}
